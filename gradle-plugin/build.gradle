plugins {
    id 'com.jfrog.bintray'
    id 'java-library'
    id 'groovy'
    id 'maven-publish'
}

repositories {
    google()
    jcenter()
}

sourceCompatibility = "${target}"
targetCompatibility = "${target}"

sourceSets.main {
    java {
        srcDirs = ['src']
    }

    groovy {
        srcDirs = ['src']
    }

    resources {
        srcDirs = ['src']
        include '**/*.properties'
        include '**/*.gif'
        include '**/*.png'
        include '**/*.pro'
    }
}

sourceSets.test {
    java {
        srcDirs = ['test']
    }
    groovy {
        srcDirs = ['test']
    }
    resources {
        srcDirs += "$buildDir/fixtures"
    }
}

// Copies examples/spring-boot in to the test resources to compile during an integration test.
tasks.register('copySpringBootSample', Copy) {
    from "$rootProject.rootDir/examples/spring-boot"
    into "$buildDir/fixtures/spring-boot"
}

tasks.withType(Test).configureEach {
    dependsOn copySpringBootSample
}

jar {
    metaInf.from 'src/META-INF'
}

repositories {
    google()
    jcenter()
}

dependencies {
    compile project(':base')
    compile 'com.guardsquare:proguard-core'
    compileOnly 'com.android.tools.build:gradle:3.0.0'
    compile gradleApi()
    compile localGroovy()
    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.13.1'
    testImplementation "org.spockframework:spock-core:1.1-groovy-2.4@jar"
    testImplementation "commons-io:commons-io:2.8.0"
}

publishing {
    publications {
        getByName('gradle-plugin') {
            artifactId = 'proguard-gradle'
        }
    }
}
